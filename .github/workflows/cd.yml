name: CD

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go ${{ matrix.go-version }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Package version
        id: package_version
        run: |
          version=$(git describe --tags --abbrev=0 2>/dev/null || echo "1.0.0")
          version=$(echo $version | sed 's/v//g' | awk -F. '{$2=$2+1; $3=0; printf "%d.%d.%d\n", $1, $2, $3}')
          echo $version
          echo "PACKAGE_VERSION=$version" >> $GITHUB_ENV
          echo "version=$version" >> $GITHUB_OUTPUT
          sed -i "s/#VERSION#/$version/g" config/config.go

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Deploy
        run: |
          docker buildx create --use
          docker buildx build --platform linux/amd64,linux/arm64 -t talkpoint/databridge:${{ env.PACKAGE_VERSION }} --push .

      - name: Create and push Git tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag -a "${{ steps.package_version.outputs.version }}" -m "Release v${{ steps.package_version.outputs.version }}"
          git push origin "${{ steps.package_version.outputs.version }}"

      - name: Merge master into develop
        continue-on-error: true
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'github-actions@users.noreply.github.com'
          git checkout develop
          git pull
          git merge master
          git push